// It is autogenerated bindings for Android sdk class.
//
// See documentation about methods on: https://developer.android.com//reference/android/widget/AdapterView.html
package sdk

import "github.com/seletskiy/go-android-rpc/android"

type AdapterView struct {
	View
}

func NewAdapterView(id string) interface{} {
	obj := AdapterView{NewView(id).(View)}

	return obj
}

func (obj AdapterView) GetClassName() string {
	return "android.widget.AdapterView"
}

func init() {
	android.ViewTypeConstructors["android.widget.AdapterView"] = NewAdapterView
}

func (obj AdapterView) GetCount() (int, error) {
	return return_int(android.CallViewMethod(
		obj.GetId(),
		"android.widget.AdapterView",
		"getCount",
	))
}

func (obj AdapterView) GetFirstVisiblePosition() (int, error) {
	return return_int(android.CallViewMethod(
		obj.GetId(),
		"android.widget.AdapterView",
		"getFirstVisiblePosition",
	))
}

func (obj AdapterView) GetLastVisiblePosition() (int, error) {
	return return_int(android.CallViewMethod(
		obj.GetId(),
		"android.widget.AdapterView",
		"getLastVisiblePosition",
	))
}

func (obj AdapterView) GetSelectedItemPosition() (int, error) {
	return return_int(android.CallViewMethod(
		obj.GetId(),
		"android.widget.AdapterView",
		"getSelectedItemPosition",
	))
}

func (obj AdapterView) RemoveAllViews() error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.AdapterView",
		"removeAllViews",
	))
}

func (obj AdapterView) RemoveViewAt(index_ int) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.AdapterView",
		"removeViewAt",
		index_,
	))
}

func (obj AdapterView) SetFocusable(focusable_ bool) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.AdapterView",
		"setFocusable",
		focusable_,
	))
}

func (obj AdapterView) SetFocusableInTouchMode(focusable_ bool) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.AdapterView",
		"setFocusableInTouchMode",
		focusable_,
	))
}

