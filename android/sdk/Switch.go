// It is autogenerated bindings for Android sdk class.
//
// See documentation about methods on: https://developer.android.com//reference/android/widget/Switch.html
package sdk

import "github.com/seletskiy/go-android-rpc/android"

type Switch struct {
	Button
}

func NewSwitch(id string) interface{} {
	obj := Switch{NewButton(id).(Button)}

	return obj
}

func (obj Switch) GetClassName() string {
	return "android.widget.Switch"
}

func init() {
	android.ViewTypeConstructors["android.widget.Switch"] = NewSwitch
}

func (obj Switch) GetCompoundPaddingLeft() (int, error) {
	return return_int(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"getCompoundPaddingLeft",
	))
}

func (obj Switch) GetCompoundPaddingRight() (int, error) {
	return return_int(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"getCompoundPaddingRight",
	))
}

func (obj Switch) GetSwitchMinWidth() (int, error) {
	return return_int(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"getSwitchMinWidth",
	))
}

func (obj Switch) GetSwitchPadding() (int, error) {
	return return_int(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"getSwitchPadding",
	))
}

func (obj Switch) GetTextOff() (string, error) {
	return return_string(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"getTextOff",
	))
}

func (obj Switch) GetTextOn() (string, error) {
	return return_string(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"getTextOn",
	))
}

func (obj Switch) GetThumbTextPadding() (int, error) {
	return return_int(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"getThumbTextPadding",
	))
}

func (obj Switch) JumpDrawablesToCurrentState() error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"jumpDrawablesToCurrentState",
	))
}

func (obj Switch) OnMeasure(widthMeasureSpec_ int, heightMeasureSpec_ int) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"onMeasure",
		widthMeasureSpec_, heightMeasureSpec_,
	))
}

func (obj Switch) SetChecked(checked_ bool) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"setChecked",
		checked_,
	))
}

func (obj Switch) SetSwitchMinWidth(pixels_ int) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"setSwitchMinWidth",
		pixels_,
	))
}

func (obj Switch) SetSwitchPadding(pixels_ int) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"setSwitchPadding",
		pixels_,
	))
}

func (obj Switch) SetTextOff(textOff_ string) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"setTextOff",
		textOff_,
	))
}

func (obj Switch) SetTextOn(textOn_ string) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"setTextOn",
		textOn_,
	))
}

func (obj Switch) SetThumbResource(resId_ int) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"setThumbResource",
		resId_,
	))
}

func (obj Switch) SetThumbTextPadding(pixels_ int) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"setThumbTextPadding",
		pixels_,
	))
}

func (obj Switch) SetTrackResource(resId_ int) error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"setTrackResource",
		resId_,
	))
}

func (obj Switch) Toggle() error {
	return return_error(android.CallViewMethod(
		obj.GetId(),
		"android.widget.Switch",
		"toggle",
	))
}

